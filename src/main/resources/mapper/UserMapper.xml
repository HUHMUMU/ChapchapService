<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.acorn.chapspring.mapper.UserMapper">
    <resultMap id="UserMap" type="UserDto">
        <id column="user_id" property="userId"/>
        <result column="nickname" property="nickname"/>
        <result column="pw" property="pw"/>
        <result column="name" property="name"/>
        <result column="birth" property="birth"/>
        <result column="gender" property="gender"/>
        <result column="address" property="address"/>
        <result column="detail_address" property="detailAddress"/>
        <result column="postnumber" property="postnumber"/>
        <result column="email" property="email"/>
        <result column="insta_url" property="instaUrl"/>
        <result column="face_url" property="faceUrl"/>
        <result column="youtube_url" property="youtubeUrl"/>
        <result column="profile_img" property="profileimg"/>
        <result column="introduce" property="introduce"/>
        <result column="u_rstatus" property="urStatus"/>
        <result column="email_check_code" property="emailCheckCode"/>
    </resultMap>
    <insert id="insertOne" parameterType="UserDto">
        insert into users (user_id, nickname, pw, name, birth, gender, address,postnumber, detail_address, email,u_rstatus,email_check_code)
            VALUE (#{userId}, #{nickname}, #{pw}, #{name}, #{birth}, #{gender}, #{address},#{postnumber}, #{detailAddress}, #{email},#{urStatus}, #{emailCheckCode})
    </insert>
    <update id="updateOne" parameterType="UserDto">
        update users set
                         nickname=#{nickname},
                         pw=#{pw},
                         address=#{address},
                         detail_address=#{detailAddress},
                         postnumber=#{postnumber},
                         email=#{email},
                         insta_url=#{instaUrl},
                         face_url=#{faceUrl},
                         youtube_url=#{youtubeUrl},
                         introduce=#{introduce},
                         birth=#{birth},
                         gender=#{gender},
                         profile_img=#{profileimg}
        where user_id=#{userId}
    </update>
    <update id="setLoginUserId">
        set @loginUserId=#{uId}
    </update>
    <update id="setLoginUserIdIsNull">
        set @loginUserId=Null
    </update>
    <update id="updateStatusByUidAndEmailCheckCode">
        UPDATE users SET u_rstatus=#{urStatus} WHERE user_id=#{userId} AND email_check_code=#{emailCheckCode}
    </update>
    <delete id="deleteByUserIdAndPw" parameterType="UserDto">
        delete from users where user_id=#{userId} and pw=#{pw}
    </delete>
    <select id="findByUserId" resultMap="UserMap">
        select * from users where user_id=#{userId}
    </select>
    <select id="findByUserIdAndPw" resultMap="UserMap">
        select * from users where user_id=#{userId} and pw=#{pw}
    </select>
    <select id="findByUserIdByEmailAndName" resultType="java.lang.String">
        select user_id from users where email=#{email} and name=#{name}
    </select>

    <!--아이디 중복 검사-->
    <select id="idCheck" resultType="int">
        SELECT COUNT(*) FROM users WHERE user_id=#{userId}
    </select>

    <!--닉네임 중복 검사-->
    <select id="nickName_Check" resultType="int">
        SELECT COUNT(*) FROM users WHERE nickname=#{nickname}
    </select>

    <!--이메일 중복 검사-->
    <select id="email_Check" resultType="int">
        SELECT COUNT(*) FROM users WHERE email=#{email}
    </select>
</mapper>