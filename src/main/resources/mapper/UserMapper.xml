<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.acorn.chapspring.mapper.UserMapper">
    <!--Users 테이블맵-->
    <resultMap id="UserMap" type="UserDto">
        <id column="user_id" property="userId"/>
        <result column="nickname" property="nickname"/>
        <result column="pw" property="pw"/>
        <result column="name" property="name"/>
        <result column="birth" property="birth"/>
        <result column="gender" property="gender"/>
        <result column="address" property="address"/>
        <result column="detail_address" property="detailAddress"/>
        <result column="postnumber" property="postnumber"/>
        <result column="email" property="email"/>
        <result column="insta_url" property="instaUrl"/>
        <result column="face_url" property="faceUrl"/>
        <result column="youtube_url" property="youtubeUrl"/>
        <result column="profile_img" property="profileImg"/>
        <result column="introduce" property="introduce"/>
        <result column="u_rstatus" property="urStatus"/>
        <result column="email_check_code" property="emailCheckCode"/>
    </resultMap>
    <!--visitedStoreList 테이블맵-->
    <resultMap id="VisitedMap" type="VisitedStoreDto">
        <id column="user_id" property="userId"/>
        <result column="visited_store_order" property="visitedStoreOrder"/>
        <result column="visited_date" property="visitedDate"/>
        <result column="store_name" property="storeName"/>
        <result column="address" property="address"/>
    </resultMap>
    <!--리뷰 테이블맵-->
    <resultMap id="ReviewMap" type="ReviewDto">
        <id column="review_num" property="reviewNum"/>
        <result column="user_id" property="userId"/>
        <result column="store_num" property="storeNum"/>
        <result column="content" property="content"/>
        <result column="comment" property="comment"/>
        <result column="img" property="img"/>
        <result column="date" property="date"/>
        <result column="star" property="star"/>
        <result column="r_rstatus" property="rrStatus"/>
    </resultMap>
    <!--추천가게 테이블맵-->
    <resultMap id="RecommendMap" type="RecommendStoreDto">
        <id column="recommend_store_num" property="recommendStoreNum"/>
        <result column="comment" property="comment"/>
        <result column="user_id" property="userId"/>
        <result column="store_num" property="storeNum"/>
    </resultMap>

    <resultMap id="JjimMap" type="JjimManageDto">
        <id column="jjim_num" property="jjimNum"/>
        <result column="jj_status" property="jjStatus"/>
        <result column="user_id" property="userId"/>
        <result column="store_num" property="storeNum"/>
    </resultMap>
    <!--유저방문조회구문-->
    <select id="findAllVisited" resultMap="VisitedMap">
        select *<!--visited_date,store_name,address--> from visited_store_lists where user_id=#{userId}
    </select>
    <!--리뷰조회구문-->
    <select id="findAllReviewed" resultMap="ReviewMap">
        select * from reviews where user_id=#{userId}
    </select>
    <!--유저서비스 구문-->
    <insert id="insertOne" parameterType="UserDto">
        insert into users (user_id, nickname, pw, name, birth, gender, address,postnumber, detail_address, email,u_rstatus,email_check_code)
            VALUE (#{userId}, #{nickname}, #{pw}, #{name}, #{birth}, #{gender}, #{address},#{postnumber}, #{detailAddress}, #{email},#{urStatus}, #{emailCheckCode})
    </insert>
    <!--추천가게 구문-->
    <insert id="insertOneByUserId" useGeneratedKeys="true" keyProperty="recommendStoreNum" parameterType="RecommendStoreDto">
        insert into recommend_stores (comment, user_id, store_num)
            VALUE (#{comment}, #{userId}, #{storeNum})
    </insert>
    <delete id="deleteOneByUserIdAndStoreNum" parameterType="recommendStoreDto">
        delete from recommend_stores where user_id=#{userId} and store_num=#{storeNum}
    </delete>
    <update id="updateOne" parameterType="UserDto">
        update users set
                         nickname=#{nickname},
                         pw=#{pw},
                         address=#{address},
                         detail_address=#{detailAddress},
                         postnumber=#{postnumber},
                         email=#{email},
                         insta_url=#{instaUrl},
                         face_url=#{faceUrl},
                         youtube_url=#{youtubeUrl},
                         introduce=#{introduce},
                         birth=#{birth},
                         gender=#{gender},
                         profile_img=#{profileimg}
        where user_id=#{userId}
    </update>
    <update id="setLoginUserId">
        set @loginUserId=#{userId}
    </update>
    <update id="setLoginUserIdIsNull">
        set @loginUserId=Null
    </update>
    <update id="updateStatusByUidAndEmailCheckCode">
        UPDATE users SET u_rstatus=#{urStatus} WHERE user_id=#{userId} AND email_check_code=#{emailCheckCode}
    </update>
    <delete id="deleteByUserIdAndPw" parameterType="UserDto">
        delete from users where user_id=#{userId} and pw=#{pw}
    </delete>
    <select id="findByUserId" resultMap="UserMap">
        select * from users where user_id=#{userId}
    </select>
    <select id="findByUserIdAndPw" resultMap="UserMap">
        select * from users where user_id=#{userId} and pw=#{pw}
    </select>
    <select id="findByUserIdByEmailAndName" resultType="java.lang.String">
        select user_id from users where email=#{email} and name=#{name}
    </select>
    <select id="findAllJjim" resultMap="JjimMap">
        select * from jjim_manages where user_id=#{userId};
    </select>

    <!--아이디 중복 검사-->
    <select id="idCheck" resultType="int">
        SELECT COUNT(*) FROM users WHERE user_id=#{userId}
    </select>
    <select id="findAllUsers" resultMap="UserMap">
        select * from users;
    </select>
    <select id="findAllRecommend" resultMap="RecommendMap">
        select * from recommend_stores where user_id=#{userId}
    </select>

    <!--닉네임 중복 검사-->
    <select id="nickName_Check" resultType="int">
        SELECT COUNT(*) FROM users WHERE nickname=#{nickname}
    </select>

    <!--이메일 중복 검사-->
    <select id="email_Check" resultType="int">
        SELECT COUNT(*) FROM users WHERE email=#{email}
    </select>
</mapper>