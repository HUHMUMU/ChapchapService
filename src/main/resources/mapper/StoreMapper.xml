<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.acorn.chapspring.mapper.StoreMapper">
    <resultMap id="StoresMap" type="com.acorn.chapspring.dto.StoresDto">
        <id column="store_num" property="storeNum"/>
        <result column="store_name" property="storeName"/>
        <result column="detail_info" property="detailInfo"/>
        <result column="short_info" property="shortInfo"/>
        <result column="madein" property="madein"/>
        <result column="address" property="address"/>
        <result column="main_img" property="mainImg"/>
        <result column="opentime" property="opentime"/>
        <result column="lastorder" property="lastorder"/>
        <result column="waiting_closetime" property="waitingClosetime"/>
        <result column="blogurl" property="blogurl"/>
        <result column="youtubeurl" property="youtubeurl"/>
        <result column="facebookurl" property="facebookurl"/>
        <result column="instaurl" property="instaurl"/>
        <result column="tvshow" property="tvshow"/>
        <result column="s_rstatus" property="sRstatus"/>
        <result column="parking" property="parking"/>
        <result column="wifi" property="wifi"/>
        <result column="toilet" property="toilet"/>
        <result column="smokingroom" property="smokingroom"/>
        <result column="babychair" property="babychair"/>
        <!-- DB에는 없지만 쿼리를 위해 Dto에 추가한 부분 -->
        <result column="category_num" property="categoryNum"/>
        <result column="jjim_count" property="jjimCount"/>
        <result column="review_count" property="reviewCount"/>
        <result column="averageStar" property="averageStar"/>
        <association property="reviewCount"
                    select="com.acorn.chapspring.mapper.ReviewMapper.countReviewByStore"
                    column="store_num"
                    fetchType="eager"/>
        <association property="storeCall"
                     select="com.acorn.chapspring.mapper.StoreManageMapper.findStoreCall"
                     column="store_num"
                     fetchType="eager"/>
        <collection property="menuList"
                    select="com.acorn.chapspring.mapper.MenuManageMapper.findMenuByStore"
                    column="store_num"
                    fetchType="eager"/>
        <collection property="chapDealList"
                    select="com.acorn.chapspring.mapper.ChapDealMapper.findEventByStore"
                    column="store_num"
                    fetchType="eager"/>
        <collection property="reviewList"
                    select="com.acorn.chapspring.mapper.ReviewMapper.findReviewByStore"
                    column="store_num"
                    fetchType="eager"/>
        <collection property="breaktimes"
                    select="com.acorn.chapspring.mapper.BreaktimeMapper.findByStore"
                    column="store_num"
                    fetchType="eager"/>
        <collection property="storeType"
                     select="com.acorn.chapspring.mapper.StoretypeMapper.findByStoreType"
                     column="store_num"
                     fetchType="eager"/>
        <collection property="holiday"
                    select="com.acorn.chapspring.mapper.HolidayMapper.findHoliByStore"
                    column="store_num"
                    fetchType="eager"/>
    </resultMap>
    <resultMap id="TypeClassesMap" type="TypeClassesDto">
        <id column="category_num" property="categoryNum"/>
        <result column="main_category" property="mainCategory"/>
        <result column="sub_category" property="subCategory"/>
    </resultMap>

    <select id="findAllStores" resultMap="StoresMap">
        SELECT * FROM stores
    </select>
    <select id="findStoresByFilter" resultMap="StoresMap">
        SELECT stores.store_num, stores.store_name, stores.main_img, stores.short_info, stores.parking,
        type_classes.category_num,
        (SELECT COUNT(*) FROM jjim_manages WHERE store_num = stores.store_num) AS jjim_count,
        (SELECT COUNT(*) FROM reviews WHERE store_num = stores.store_num) AS review_count,
        (SELECT AVG(star) FROM reviews WHERE store_num = stores.store_num) AS averageStar
        FROM stores
        LEFT JOIN storetypes ON stores.store_num = storetypes.store_num
        LEFT JOIN type_classes ON storetypes.category_num = type_classes.category_num
        LEFT JOIN menu_manages ON stores.store_num = menu_manages.store_num
        <trim prefix="WHERE" prefixOverrides="AND |OR">
            <if test="menuType != null">
                AND type_classes.category_num = #{menuType}
            </if>
            <if test="detailArea != null">
                AND stores.address LIKE CONCAT('%(', #{detailArea}, ')%')
            </if>
            <if test="parking != null">
                AND stores.parking = #{parking}
            </if>
            <if test="priceRange != null">
                AND (SELECT AVG(price) FROM menu_manages WHERE store_num = stores.store_num) BETWEEN
                SUBSTRING_INDEX(#{priceRange}, '-', 1) AND SUBSTRING_INDEX(#{priceRange}, '-', -1)
            </if>
        </trim>
        GROUP BY stores.store_num, type_classes.category_num
<!--        <choose>-->
<!--            <when test="sortBy == 'distance'">-->
<!--                ORDER BY [거리 계산 로직, 예: (stores.latitude - #{userLatitude})^2 + (stores.longitude - #{userLongitude})^2] ASC-->
<!--            </when>-->
<!--            <when test="sortBy == 'recommended'">-->
<!--                ORDER BY recommend_count DESC, store_num DESC-->
<!--            </when>-->
<!--            <when test="sortBy == 'review'">-->
<!--                ORDER BY review_count DESC, store_num DESC-->
<!--            </when>-->
<!--            <when test="sortBy == 'jjim'">-->
<!--                ORDER BY jjim_count DESC, store_num DESC-->
<!--            </when>-->
<!--            <otherwise>-->
<!--                ORDER BY store_num DESC-->
<!--            </otherwise>-->
<!--        </choose>-->
    </select>

    <select id="findStoreByStoreNum" resultMap="StoresMap">
        SELECT * FROM stores WHERE store_num=#{storeNum}
    </select>
    <select id="findBreaktimesByStoreNum" resultType="com.acorn.chapspring.dto.BreaktimesDto">
        SELECT * FROM breaktimes WHERE store_num=#{storeNum}
    </select>
    <select id="findMenusByStoreNum" resultType="com.acorn.chapspring.dto.MenuManagesDto">
        SELECT * FROM menu_manages WHERE store_num=#{storeNum}
    </select>
    <select id="findReviewsByStoreNum" resultType="com.acorn.chapspring.dto.ReviewsDto">
        SELECT * FROM reviews WHERE store_num=#{storeNum}
    </select>
    <select id="countReviewsByStoreNum" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM reviews WHERE store_num=#{storeNum}
    </select>
    <select id="countJjimByStoreNum" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM jjim_manages WHERE store_num=#{storeNum}
    </select>
    <!--  가게 이름 찾기 (챱딜에서 사용)  -->
    <select id="findStoreName" resultType="com.acorn.chapspring.dto.StoresDto">
        SELECT store_name FROM stores WHERE store_num=#{storeNum}
    </select>
    <select id="findByStoreNum" resultType="com.acorn.chapspring.dto.StoresDto">
        SELECT * FROM stores WHERE store_num=#{storeNum}
    </select>
    <select id="findAllType" resultType="com.acorn.chapspring.dto.TypeClassesDto">
        SELECT * FROM type_classes
    </select>
    <select id="findReviewsCountByStoreNum" resultType="com.acorn.chapspring.dto.ReviewsCountDto">

    </select>

</mapper>